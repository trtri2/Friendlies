{"version":3,"sources":["components/Header.js","components/Footer.js","js/brackGenerator.js","components/Scoreboard.js","components/Match.js","components/Round.js","components/Bracket.js","components/FormRadio.js","components/FormInput.js","components/Form.js","App.js","index.js"],"names":["Header","className","style","backgroundColor","to","color","Footer","generateBracket","playerList","length","playerArr","rounds","players","teamA1","teamA2","teamB1","teamB2","i","currRound","rid","matches","mid","match","teamA","ids","id","values","value","teamB","selected","rotateArray","push","fourPlayers","fivePlayers","matchA_teamA1","matchA_teamA2","matchA_teamB1","matchA_teamB2","matchB_teamA1","matchB_teamA2","matchB_teamB1","matchB_teamB2","eightPlayers","matchC_teamA1","matchC_teamA2","matchC_teamB1","matchC_teamB2","twelvePlayers","array","exceptLast","size","first","Scoreboard","props","scope","map","player","wins","losses","Match","undefined","name","type","checked","onChange","event","handleChange","Round","displayMatches","Bracket","useState","validBracket","setValidBracket","setPlayerList","setRounds","winner","loser","prevSelected","roundID","target","newRoundList","round","newPlayerList","useEffect","location","state","numRounds","FormRadio","onClick","FormInput","placeholder","Form","playerCount","setPlayerCount","submitEnabled","setSubmitEnabled","history","useHistory","prev","numPlayers","playerObj","initPlayerList","class","align","role","onSubmit","preventDefault","disabled","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78813a3a.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Header() {\r\n    return (\r\n            <div>\r\n                <div className=\"navbar\" style={{backgroundColor: \"#ef838b\"}} >\r\n                    <nav className=\"nav nav-pills nav-fill\">\r\n                        <Link className=\"nav-link\" to=\"/friendlies\">\r\n                            <li className=\"nav-item\" style={{color: \"white\"}} >Home</li>\r\n                        </Link>\r\n                        {/* <Link className=\"nav-link\" to=\"/bracket\">\r\n                            <li className=\"nav-item\" style={{color: \"white\"}} >Bracket</li>\r\n                        </Link>\r\n                        <Link className=\"nav-link\" to=\"/bracket\">\r\n                            <li className=\"nav-item\" style={{color: \"white\"}} >Scoreboard</li>\r\n                        </Link> */}\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Footer() {\r\n    return (\r\n            <div >\r\n                <footer >\r\n                    trtri2.github.io \r\n                </footer>   \r\n            </div> \r\n    ); \r\n}\r\n\r\nexport default Footer","// TODO: display \"Byes\" for 5-6 player matchs..\r\n\r\nexport function generateBracket(playerList){\r\n    // TODO : shuffle array\r\n    switch(playerList.length){\r\n        case 4:\r\n            return fourPlayers(playerList)\r\n        case 5:\r\n            return fivePlayers(playerList)\r\n        case 6:\r\n            return sixPlayers(playerList)\r\n        case 8:\r\n            return eightPlayers(playerList)\r\n        case 12:\r\n            return twelvePlayers(playerList)\r\n    }\r\n}\r\n\r\nfunction fourPlayers(playerArr){\r\n    let rounds = []\r\n    let players = [...playerArr]\r\n    const teamA1 = 0\r\n    , teamA2 = 2\r\n    , teamB1 = 1\r\n    , teamB2 = 3\r\n\r\n    for (let i = 1; i <= 3; i++){\r\n        let match = {\r\n            mid: `${i}A`,\r\n            match: 'A',\r\n            teamA: {\r\n                ids: [players[teamA1].id, players[teamA2].id],\r\n                values: [players[teamA1].value, players[teamA2].value],\r\n            },\r\n            teamB: {\r\n                ids: [players[teamB1].id, players[teamB2].id],\r\n                values: [players[teamB1].value, players[teamB2].value],\r\n            },\r\n            selected: \"none\"\r\n        }\r\n\r\n        let currRound = {\r\n            rid: i,\r\n            matches: [match],\r\n        }\r\n        \r\n        players = rotateArray(players, true)\r\n        rounds.push(currRound)\r\n    }\r\n    return rounds\r\n}\r\n\r\nfunction fivePlayers(playerArr){\r\n    let rounds = []\r\n    let players = [...playerArr]\r\n    const teamA1 = 2\r\n    , teamA2 = 3\r\n    , teamB1 = 4\r\n    , teamB2 = 1\r\n\r\n    for (let i = 1; i <= 5; i++){\r\n        let match = {\r\n            mid: `${i}A`,\r\n            match: 'A',\r\n            teamA: {\r\n                ids: [players[teamA1].id, players[teamA2].id],\r\n                values: [players[teamA1].value, players[teamA2].value],\r\n            },\r\n            teamB: {\r\n                ids: [players[teamB1].id, players[teamB2].id],\r\n                values: [players[teamB1].value, players[teamB2].value],\r\n            },\r\n            selected: \"none\"\r\n        }\r\n\r\n        let currRound = {\r\n            rid: i,\r\n            matches: [match],\r\n        }\r\n\r\n        players = rotateArray(players, false)\r\n        rounds.push(currRound)\r\n    }\r\n    return rounds\r\n}\r\n\r\nfunction sixPlayers(){\r\n    // TODO ... gonna be manual work\r\n}\r\n\r\nfunction eightPlayers(playerArr){\r\n    let rounds = []\r\n    let players = [...playerArr]\r\n    const matchA_teamA1 = 2\r\n        , matchA_teamA2 = 3\r\n        , matchA_teamB1 = 4\r\n        , matchA_teamB2 = 6\r\n        , matchB_teamA1 = 5\r\n        , matchB_teamA2 = 1\r\n        , matchB_teamB1 = 7\r\n        , matchB_teamB2 = 0\r\n\r\n    for (let i = 1; i <= 7; i++){\r\n        let matchA = {\r\n            mid: `${i}A`,\r\n            match: 'A',\r\n            teamA: {\r\n                ids: [players[matchA_teamA1].id, players[matchA_teamA2].id],\r\n                values: [players[matchA_teamA1].value, players[matchA_teamA2].value]\r\n            },\r\n            teamB: {\r\n                ids: [players[matchA_teamB1].id, players[matchA_teamB2].id],\r\n                values: [players[matchA_teamB1].value, players[matchA_teamB2].value]\r\n            },\r\n            selected: \"none\"\r\n        }\r\n\r\n        let matchB = {\r\n            mid: `${i}B`,\r\n            match: 'B',\r\n            teamA: {\r\n                ids: [players[matchB_teamA1].id, players[matchB_teamA2].id],\r\n                values: [players[matchB_teamA1].value, players[matchB_teamA2].value]\r\n            },\r\n            teamB: {\r\n                ids: [players[matchB_teamB1].id, players[matchB_teamB2].id],\r\n                values: [players[matchB_teamB1].value, players[matchB_teamB2].value]\r\n            },\r\n            selected: \"none\"\r\n        }\r\n\r\n        let currRound = {\r\n            rid: i,\r\n            matches: [matchA, matchB]\r\n        }\r\n\r\n        //rotate the player arr except last element\r\n        players = rotateArray(players, true)\r\n        rounds.push(currRound)\r\n    }\r\n    return rounds\r\n}\r\n\r\nfunction twelvePlayers(playerArr){\r\n    let rounds = []\r\n    let players = [...playerArr]\r\n    const matchA_teamA1 = 2\r\n        , matchA_teamA2 = 3\r\n        , matchA_teamB1 = 1\r\n        , matchA_teamB2 = 6\r\n        , matchB_teamA1 = 8\r\n        , matchB_teamA2 = 10\r\n        , matchB_teamB1 = 4\r\n        , matchB_teamB2 = 7\r\n        , matchC_teamA1 = 5\r\n        , matchC_teamA2 = 9\r\n        , matchC_teamB1 = 11\r\n        , matchC_teamB2 = 0\r\n\r\n    for (let i = 1; i <= 11; i++){\r\n        let matchA = {\r\n            mid: `${i}A`,\r\n            match: 'A',\r\n            teamA: {\r\n                ids: [players[matchA_teamA1].id, players[matchA_teamA2].id],\r\n                values: [players[matchA_teamA1].value, players[matchA_teamA2].value]\r\n            },\r\n            teamB: {\r\n                ids: [players[matchA_teamB1].id, players[matchA_teamB2].id],\r\n                values: [players[matchA_teamB1].value, players[matchA_teamB2].value]\r\n            },\r\n            selected:\"none\"\r\n        }\r\n\r\n        let matchB = {\r\n            mid: `${i}B`,\r\n            match: 'B',\r\n            teamA: {\r\n                ids: [players[matchB_teamA1].id, players[matchB_teamA2].id],\r\n                values: [players[matchB_teamA1].value, players[matchB_teamA2].value]\r\n            },\r\n            teamB: {\r\n                ids: [players[matchB_teamB1].id, players[matchB_teamB2].id],\r\n                values: [players[matchB_teamB1].value, players[matchB_teamB2].value]\r\n            },\r\n            selected: \"none\"\r\n        }\r\n\r\n        let matchC = {\r\n            mid: `${i}C`,\r\n            match: 'C',\r\n            teamA: {\r\n                ids: [players[matchC_teamA1].id, players[matchC_teamA2].id],\r\n                values: [players[matchC_teamA1].value, players[matchC_teamA2].value]\r\n            },\r\n            teamB: {\r\n                ids: [players[matchC_teamB1].id, players[matchC_teamB2].id],\r\n                values: [players[matchC_teamB1].value, players[matchC_teamB2].value]\r\n            },\r\n            selected: \"none\"\r\n        }\r\n\r\n        let currRound = {\r\n            rid: i,\r\n            matches: [matchA, matchB, matchC]\r\n        }\r\n\r\n        //rotate the player arr except last element\r\n        players = rotateArray(players, true)\r\n        rounds.push(currRound)\r\n    }\r\n    return rounds\r\n}\r\n\r\nfunction rotateArray(array, exceptLast){\r\n    let size = exceptLast ? array.length-1 : array.length\r\n    let first = array[0]\r\n\r\n    for (let i = 0; i < size; i++){\r\n        array[i] = array[i+1]\r\n    }\r\n    array[size-1] = first \r\n\r\n    return array\r\n}\r\n\r\nfunction shuffleArray(array){\r\n    // TODO\r\n}\r\n","import React from 'react'\r\n\r\nfunction Scoreboard(props) {\r\n\r\n    function calculatePercentage(wins, losses){\r\n        if (wins == 0 && losses == 0){\r\n            return ''\r\n        }\r\n        if (losses < 1){\r\n            losses = wins\r\n        }\r\n       \r\n        return Math.round(wins / (wins+losses) * 100)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"text-center text-white\"><strong>Scoreboard</strong></h3>\r\n            <table className=\"table table-striped table-borderless text-white\" style={{backgroundColor: \"#ef838b\"}}>\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Player</th>\r\n                        <th scope=\"col\">Wins</th>\r\n                        <th scope=\"col\">Losses</th>\r\n                        {/* <th scope=\"col\">WR</th> */}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.playerList.map(player => {\r\n                        return (\r\n                            <tr>\r\n                                <th scope=\"row\">{player.value}</th>\r\n                                <td>{player.wins}</td>\r\n                                <td>{player.losses}</td>\r\n                                {/* <td>{`${calculatePercentage(player.wins, player.losses)}%`}</td> */}\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n                {/* TO DO: RAFFLE BRO */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scoreboard","import React from 'react'\r\n\r\nfunction Match(props) {\r\n    return (\r\n        <div>\r\n            {props.match !== undefined ? <h6>{`Match ${props.match}`}</h6> : ''}\r\n            <div className=\"row\">\r\n                    <div className=\"col-5\">\r\n                        {`${props.teamA.values[0]} & ${props.teamA.values[1]}`}\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                        VS\r\n                    </div>\r\n                    <div className=\"col-5\">\r\n                        {`${props.teamB.values[0]} & ${props.teamB.values[1]}`}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"form-check inline col-5\">\r\n                        <input \r\n                            className=\"form-check-input\"\r\n                            name={props.mid}\r\n                            type=\"radio\"\r\n                            value=\"teamA\"\r\n                            checked={props.selected === \"teamA\"}\r\n                            onChange={(event) => props.handleChange(event, props.teamA.ids, props.teamB.ids, props.selected, props.rid)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                    </div>\r\n                    <div className=\"form-check inline col-5\">\r\n                        <input \r\n                            className=\"form-check-input\"\r\n                            name={props.mid}\r\n                            type=\"radio\"\r\n                            value=\"teamB\"\r\n                            checked={props.selected === \"teamB\"}\r\n                            onChange={(event) => props.handleChange(event, props.teamB.ids, props.teamA.ids, props.selected, props.rid)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n                <br/>\r\n                \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Match","import React from 'react'\r\n\r\nimport Match from './Match'\r\n\r\nfunction Round(props) {\r\n    const displayMatches = props.matches.map(match =>\r\n        <div>\r\n            <Match \r\n                key={match.mid}\r\n                mid={match.mid}\r\n                rid={props.rid}\r\n                selected={match.selected}\r\n                match={match.match} \r\n                teamA={match.teamA} \r\n                teamB={match.teamB} \r\n                handleChange={props.handleChange} />\r\n        </div>\r\n    )\r\n    return (\r\n        <div>\r\n            <div className=\"card text-center text-white\" style={{backgroundColor: \"#E8A87C\"}}>\r\n                <div className=\"card-header\">\r\n                    <h5>{`Round ${props.rid}`}</h5>\r\n                </div>\r\n                <br/>\r\n                {displayMatches}\r\n                <br/>\r\n            </div>\r\n            <br/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Round","import React, {useEffect, useState} from 'react'\r\n\r\nimport { generateBracket } from '../js/brackGenerator'\r\nimport Scoreboard from './Scoreboard'\r\nimport Round from './Round'\r\n\r\nfunction Bracket(props) {\r\n    const [validBracket, setValidBracket] = useState(false)\r\n    const [playerList, setPlayerList] = useState([])\r\n    const [rounds, setRounds] = useState([])\r\n\r\n    // EVENT DRIVEN FUNCTIONS\r\n\r\n    // not use effect?... when unmounting and \"remounting\" it resets the things.\r\n    useEffect(() => {\r\n        if (typeof(props.location.state) !== 'undefined' && !validBracket){\r\n            // setup vars..\r\n            setValidBracket(true)\r\n            setPlayerList([...props.location.state])\r\n            setRounds(generateBracket(props.location.state))\r\n        }\r\n    }, []);\r\n\r\n    // handles match results to update scoreboard and state\r\n    function handleChange(event, winner, loser, prevSelected, roundID){\r\n        // set rounds checkboxes, given the RID, find the round that has the corresponding match to update\r\n        const {name, value} = event.target\r\n        const newRoundList = rounds.map(round => {\r\n            if (round.rid === roundID) {\r\n                return {\r\n                    ...round,\r\n                    matches: round.matches.map(match => {\r\n                        if (match.mid === name){\r\n                            return {\r\n                                ...match,\r\n                                selected: value\r\n                            }\r\n                        } else {\r\n                            return match\r\n                        }\r\n                    })\r\n                }\r\n            } else {\r\n                return round\r\n            }\r\n        })\r\n\r\n        // set player list scores. Use previously selected to offset intitial selection for scores.\r\n        // i.e. first time a radio button is entered, we should not decrement the 'wins' on the losing team.\r\n        const newPlayerList = playerList.map(player => {\r\n            if (player.id === winner[0] || player.id === winner[1]){\r\n                return {\r\n                    ...player,\r\n                    wins: player.wins + 1,\r\n                    losses: prevSelected === 'none' ? player.losses : player.losses - 1,\r\n                }\r\n            } else if (player.id === loser[0] || player.id === loser[1]){\r\n                return {\r\n                    ...player,\r\n                    wins: prevSelected === 'none' ? player.wins : player.wins - 1,\r\n                    losses: player.losses + 1,\r\n                }\r\n            } else {\r\n                return player\r\n            }\r\n        })\r\n        setRounds(newRoundList)\r\n        setPlayerList(newPlayerList)\r\n    }\r\n\r\n    // END OF EVENT DRIVEN FUNCTIONS\r\n\r\n    // HELPER FUNCTIONS\r\n\r\n    function displayRounds(){\r\n        return rounds.map(round => \r\n            <Round\r\n                key={round.rid}\r\n                rid={round.rid}\r\n                matches={round.matches}\r\n                handleChange={handleChange}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n    // END OF HELPER FUNCTIONS\r\n\r\n    return (\r\n        <div className=\"\">\r\n            {validBracket ?\r\n                <div className=\"container\">\r\n                    <h3 className=\"text-center text-white\"><strong>Bracket</strong></h3>\r\n                    {displayRounds()}\r\n                    <hr/>\r\n                    <Scoreboard playerList={playerList} numRounds={rounds.length}/>\r\n                </div>             \r\n            :<h1>You need to create a new game first!</h1>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Bracket","import React from 'react'\r\n\r\nfunction FormRadio(props){\r\n    return(\r\n        <div className=\"form-check form-check-inline\">\r\n                <input \r\n                    className=\"btn btn-secondary\" \r\n                    type=\"button\"\r\n                    name= {props.name}\r\n                    value = {props.value}\r\n                    onClick = {props.handleChange}\r\n                />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormRadio","import React from 'react'\r\n\r\nfunction FormInput(props){\r\n    return(\r\n        <div className=\"form-group col\">\r\n                <input \r\n                    className=\"form-control\" \r\n                    type=\"text\"\r\n                    id={props.id}\r\n                    name= {props.name}\r\n                    value = {props.value}\r\n                    placeholder = {props.placeholder}\r\n                    onChange = {props.handleChange}\r\n                />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormInput","import React, {useEffect, useState} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nimport FormRadio from './FormRadio'\r\nimport FormInput from './FormInput'\r\n\r\nfunction Form() {\r\n    // STATES\r\n    const [playerCount, setPlayerCount] = useState(0)\r\n    const [playerList, setPlayerList] = useState([])\r\n    const [submitEnabled, setSubmitEnabled] = useState(false)\r\n\r\n    let history = useHistory()\r\n\r\n    // EVENT DRIVEN FUNCTIONS\r\n\r\n    function handleChange(event){\r\n        const {type, value} = event.target\r\n        if (type === \"text\") {\r\n            const {id} = event.target\r\n            setPlayerList(prev => {\r\n                const newPlayerList = prev.map(player => {\r\n                    if (player.id == id){\r\n                        return{\r\n                            ...player,\r\n                            value: value\r\n                        }\r\n                    }\r\n                    return player\r\n                })\r\n                return newPlayerList\r\n            })\r\n        } else {\r\n            // dont overwrite current fields if the same button was clicked\r\n            if (playerCount !== value){\r\n                setPlayerCount(value)\r\n                initPlayerList(value)\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleSubmit(event){\r\n        event.preventDefault();\r\n        history.push(\"/friendlies/bracket\", playerList)\r\n    }\r\n\r\n    useEffect(() => {\r\n        // check if all items in list is populated\r\n        for (var i = 0; i < playerCount; i++){\r\n            if (playerList[i].value === ''){\r\n                setSubmitEnabled(false)\r\n                return\r\n            }\r\n        }\r\n        setSubmitEnabled(true)\r\n    }, [playerList, playerCount]);\r\n\r\n    // END OF EVENT DRIVEN FUNCTIONS\r\n\r\n    // HELPER FUNCTIONS \r\n\r\n    function initPlayerList(numPlayers){\r\n        var playerArr = []\r\n        for (let i = 0; i < numPlayers; i++){\r\n            const playerObj = {\r\n                id: i,\r\n                placeholder: `Player ${i+1}`,\r\n                name: 'playerName',\r\n                value: '',\r\n                wins: 0,\r\n                losses: 0,\r\n            }\r\n            playerArr.push(playerObj)\r\n        }\r\n        setPlayerList(playerArr)\r\n    }\r\n\r\n    function displayPlayerList(){\r\n        return playerList.map(player => \r\n            <FormInput \r\n                key={player.id} \r\n                placeholder={player.placeholder} \r\n                name={player.name} \r\n                value={player.value}\r\n                id = {player.id}\r\n                handleChange={handleChange}  \r\n            />)\r\n    }\r\n    \r\n    // END OF HELPER FUNCTIONS\r\n    // TODO: IMPLEMENT 6 PLAYERS\r\n    return (\r\n        <div>\r\n            <div class=\"jumbotron container-sm\" align=\"center\">\r\n                <h1 className=\"display-4\">Friendlies</h1>\r\n                <p className=\"lead\">A round-robin bracket generator for rotating doubles</p>\r\n                <hr className=\"my-4\"/>\r\n                <div>\r\n                    <h5>Select Number of Players</h5>\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                    <FormRadio handleChange={handleChange} name={\"playerCount\"} value={4} />\r\n                    <FormRadio handleChange={handleChange} name={\"playerCount\"} value={5} />\r\n                    {/* <FormRadio handleChange={handleChange} name={\"playerCount\"} value={6} /> */}\r\n                    <FormRadio handleChange={handleChange} name={\"playerCount\"} value={8} />\r\n                    <FormRadio handleChange={handleChange} name={\"playerCount\"} value={12} />\r\n                    </div>\r\n                </div>\r\n                \r\n                <br></br>\r\n                {playerCount > 0 ?  \r\n                <div>\r\n                    <h5>Enter Player Names</h5>\r\n                    <form onSubmit={handleSubmit}>\r\n                        {displayPlayerList()}\r\n                        <button className=\"btn\" style={!submitEnabled ? {backgroundColor: \"grey\"} : {color:\"white\",backgroundColor: \"#ef838b\"}} disabled={!submitEnabled}>Generate Bracket!</button>\r\n                    </form>\r\n                </div>\r\n                : null}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Form","import React from 'react'\r\nimport {BrowserRouter as Router, Switch, Route, HashRouter} from 'react-router-dom'\r\n\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport Bracket from './components/Bracket'\r\nimport Form from './components/Form'\r\n\r\nfunction App() {\r\n  return (\r\n      <Router>\r\n        <Header/>\r\n        <div className=\"p-3 container\">\r\n              <Switch>\r\n                <Route path =\"/friendlies/bracket\" exact component={Bracket}/>\r\n                <Route exact path =\"/friendlies\" exact component={Form}/>\r\n              </Switch>\r\n          </div>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}